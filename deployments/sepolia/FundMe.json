{
  "address": "0x3Ae14F5e7Eb3ACE9556e5836B24453C56f988D4c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Cheaperwithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOnwer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gets_PriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5e7bff8786a3720e5de79902747bc14987ce9d49a0296d8709d9088621c9dbbd",
  "receipt": {
    "to": null,
    "from": "0x4fF8C85F89ec99886Fe61298528D9A0F583Fef92",
    "contractAddress": "0x3Ae14F5e7Eb3ACE9556e5836B24453C56f988D4c",
    "transactionIndex": 24,
    "gasUsed": "1008928",
    "logsBloom": "0x
    "blockHash": "0x3e85b2907b2fde3740f6d4544be6563724fd59948b80ecda0bbf2b52c721114e",
    "transactionHash": "0x5e7bff8786a3720e5de79902747bc14987ce9d49a0296d8709d9088621c9dbbd",
    "logs": [],
    "blockNumber": 5026057,
    "cumulativeGasUsed": "3704128",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "66d1f3e4acf4f1783389bee99546ec83",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Cheaperwithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOnwer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gets_PriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.19;\\r\\n\\r\\nimport \\\"./PriceConvert.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\ncontract FundMe {\\r\\n    uint256 public constant minimumUsd = 50 * 1e18;\\r\\n\\r\\n    using PriceConvert for uint256;\\r\\n\\r\\n    address[] private s_funders;\\r\\n    mapping(address => uint256) private s_adressToAmountFunded;\\r\\n    address private immutable i_owner;\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            msg.value.getConversion(s_priceFeed) >= minimumUsd,\\r\\n            \\\"Not Enough for Transaction!!\\\"\\r\\n        );\\r\\n        s_funders.push(msg.sender);\\r\\n        s_adressToAmountFunded[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public payable onlyOwner {\\r\\n        for (\\r\\n            uint256 fundedIndex = 0;\\r\\n            fundedIndex < s_funders.length;\\r\\n            fundedIndex++\\r\\n        ) {\\r\\n            s_adressToAmountFunded[s_funders[fundedIndex]] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n\\r\\n        // // transfer\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        // // send\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send failed\\\");\\r\\n        // // call\\r\\n\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    function Cheaperwithdraw() public payable onlyOwner {\\r\\n        address[] memory funders = s_funders;\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            s_adressToAmountFunded[s_funders[funderIndex]] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(\\r\\n            msg.sender == i_owner,\\r\\n            \\\"You are not Authorized to withdraw Funds.\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function gets_PriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n\\r\\n    function getOnwer() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getFunder(uint256 index) public view returns (address) {\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n    function getAddressToAmountFunded(\\r\\n        address fundingAddress\\r\\n    ) public view returns (uint256) {\\r\\n        return s_adressToAmountFunded [fundingAddress];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xbd72edf2edf9fa84bc162772a027594abaa3dddce5a612aab50abbcc0ca0bcef\",\"license\":\"MIT\"},\"contracts/PriceConvert.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.19;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConvert {\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversion(uint256 ethAmount,AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x00db352616c53b26da767db68590d826fc29ce0d22b01a031e781a5bea91d6b4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200125a3803806200125a83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b6080516110e162000179600039600081816101f1015281816104bb015261082901526110e16000f3fe60806040526004361061007b5760003560e01c8063b60d42881161004e578063b60d4288146100fc578063b634b8e514610106578063c0381d5914610131578063d7b4750c1461015c5761007b565b80630343fb2514610080578063098de820146100bd5780632c1ccd1b146100e85780633ccfd60b146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a95565b610199565b6040516100b49190610adb565b60405180910390f35b3480156100c957600080fd5b506100d26101e2565b6040516100df9190610adb565b60405180910390f35b6100f06101ef565b005b6100fa6104b9565b005b6101046106fc565b005b34801561011257600080fd5b5061011b610825565b6040516101289190610b05565b60405180910390f35b34801561013d57600080fd5b5061014661084d565b6040516101539190610b7f565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e9190610bc6565b610877565b6040516101909190610b05565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027490610c76565b60405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561030057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102b6575b5050505050905060005b81518110156103a85760006001600080848154811061032c5761032b610c96565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103a090610cf4565b91505061030a565b50600067ffffffffffffffff8111156103c4576103c3610d3c565b5b6040519080825280602002602001820160405280156103f25781602001602082028036833780820191505090505b506000908051906020019061040892919061098b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161042f90610d9c565b60006040518083038185875af1925050503d806000811461046c576040519150601f19603f3d011682016040523d82523d6000602084013e610471565b606091505b50509050806104b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ac90610dfd565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053e90610c76565b60405180910390fd5b60005b6000805490508110156105ec576000600160008084815481106105705761056f610c96565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806105e490610cf4565b91505061054a565b50600067ffffffffffffffff81111561060857610607610d3c565b5b6040519080825280602002602001820160405280156106365781602001602082028036833780820191505090505b506000908051906020019061064c92919061098b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161067390610d9c565b60006040518083038185875af1925050503d80600081146106b0576040519150601f19603f3d011682016040523d82523d6000602084013e6106b5565b606091505b50509050806106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f090610dfd565b60405180910390fd5b50565b6802b5e3af16b188000061073b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108be90919063ffffffff16565b101561077c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077390610e69565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061088c5761088b610c96565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108ca836108fa565b90506000670de0b6b3a764000085836108e39190610e89565b6108ed9190610efa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096c9190610fb8565b5050509150506402540be400816109839190611033565b915050919050565b828054828255906000526020600020908101928215610a04579160200282015b82811115610a035782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109ab565b5b509050610a119190610a15565b5090565b5b80821115610a2e576000816000905550600101610a16565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6282610a37565b9050919050565b610a7281610a57565b8114610a7d57600080fd5b50565b600081359050610a8f81610a69565b92915050565b600060208284031215610aab57610aaa610a32565b5b6000610ab984828501610a80565b91505092915050565b6000819050919050565b610ad581610ac2565b82525050565b6000602082019050610af06000830184610acc565b92915050565b610aff81610a57565b82525050565b6000602082019050610b1a6000830184610af6565b92915050565b6000819050919050565b6000610b45610b40610b3b84610a37565b610b20565b610a37565b9050919050565b6000610b5782610b2a565b9050919050565b6000610b6982610b4c565b9050919050565b610b7981610b5e565b82525050565b6000602082019050610b946000830184610b70565b92915050565b610ba381610ac2565b8114610bae57600080fd5b50565b600081359050610bc081610b9a565b92915050565b600060208284031215610bdc57610bdb610a32565b5b6000610bea84828501610bb1565b91505092915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420417574686f72697a656420746f2077697468647260008201527f61772046756e64732e0000000000000000000000000000000000000000000000602082015250565b6000610c60602983610bf3565b9150610c6b82610c04565b604082019050919050565b60006020820190508181036000830152610c8f81610c53565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cff82610ac2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d3157610d30610cc5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d86600083610d6b565b9150610d9182610d76565b600082019050919050565b6000610da782610d79565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610de7600b83610bf3565b9150610df282610db1565b602082019050919050565b60006020820190508181036000830152610e1681610dda565b9050919050565b7f4e6f7420456e6f75676820666f72205472616e73616374696f6e212100000000600082015250565b6000610e53601c83610bf3565b9150610e5e82610e1d565b602082019050919050565b60006020820190508181036000830152610e8281610e46565b9050919050565b6000610e9482610ac2565b9150610e9f83610ac2565b9250828202610ead81610ac2565b91508282048414831517610ec457610ec3610cc5565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f0582610ac2565b9150610f1083610ac2565b925082610f2057610f1f610ecb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f4a81610f2b565b8114610f5557600080fd5b50565b600081519050610f6781610f41565b92915050565b6000819050919050565b610f8081610f6d565b8114610f8b57600080fd5b50565b600081519050610f9d81610f77565b92915050565b600081519050610fb281610b9a565b92915050565b600080600080600060a08688031215610fd457610fd3610a32565b5b6000610fe288828901610f58565b9550506020610ff388828901610f8e565b945050604061100488828901610fa3565b935050606061101588828901610fa3565b925050608061102688828901610f58565b9150509295509295909350565b600061103e82610f6d565b915061104983610f6d565b925082820261105781610f6d565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561108f5761108e610cc5565b5b82820584148315176110a4576110a3610cc5565b5b509291505056fea26469706673582212201a6ff9bb5cb2fec605a6694366de52ef85605ad3352fad913135b9e4ed57eb6164736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063b60d42881161004e578063b60d4288146100fc578063b634b8e514610106578063c0381d5914610131578063d7b4750c1461015c5761007b565b80630343fb2514610080578063098de820146100bd5780632c1ccd1b146100e85780633ccfd60b146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a95565b610199565b6040516100b49190610adb565b60405180910390f35b3480156100c957600080fd5b506100d26101e2565b6040516100df9190610adb565b60405180910390f35b6100f06101ef565b005b6100fa6104b9565b005b6101046106fc565b005b34801561011257600080fd5b5061011b610825565b6040516101289190610b05565b60405180910390f35b34801561013d57600080fd5b5061014661084d565b6040516101539190610b7f565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e9190610bc6565b610877565b6040516101909190610b05565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027490610c76565b60405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561030057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102b6575b5050505050905060005b81518110156103a85760006001600080848154811061032c5761032b610c96565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103a090610cf4565b91505061030a565b50600067ffffffffffffffff8111156103c4576103c3610d3c565b5b6040519080825280602002602001820160405280156103f25781602001602082028036833780820191505090505b506000908051906020019061040892919061098b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161042f90610d9c565b60006040518083038185875af1925050503d806000811461046c576040519150601f19603f3d011682016040523d82523d6000602084013e610471565b606091505b50509050806104b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ac90610dfd565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053e90610c76565b60405180910390fd5b60005b6000805490508110156105ec576000600160008084815481106105705761056f610c96565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806105e490610cf4565b91505061054a565b50600067ffffffffffffffff81111561060857610607610d3c565b5b6040519080825280602002602001820160405280156106365781602001602082028036833780820191505090505b506000908051906020019061064c92919061098b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161067390610d9c565b60006040518083038185875af1925050503d80600081146106b0576040519150601f19603f3d011682016040523d82523d6000602084013e6106b5565b606091505b50509050806106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f090610dfd565b60405180910390fd5b50565b6802b5e3af16b188000061073b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108be90919063ffffffff16565b101561077c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077390610e69565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061088c5761088b610c96565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108ca836108fa565b90506000670de0b6b3a764000085836108e39190610e89565b6108ed9190610efa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096c9190610fb8565b5050509150506402540be400816109839190611033565b915050919050565b828054828255906000526020600020908101928215610a04579160200282015b82811115610a035782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109ab565b5b509050610a119190610a15565b5090565b5b80821115610a2e576000816000905550600101610a16565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6282610a37565b9050919050565b610a7281610a57565b8114610a7d57600080fd5b50565b600081359050610a8f81610a69565b92915050565b600060208284031215610aab57610aaa610a32565b5b6000610ab984828501610a80565b91505092915050565b6000819050919050565b610ad581610ac2565b82525050565b6000602082019050610af06000830184610acc565b92915050565b610aff81610a57565b82525050565b6000602082019050610b1a6000830184610af6565b92915050565b6000819050919050565b6000610b45610b40610b3b84610a37565b610b20565b610a37565b9050919050565b6000610b5782610b2a565b9050919050565b6000610b6982610b4c565b9050919050565b610b7981610b5e565b82525050565b6000602082019050610b946000830184610b70565b92915050565b610ba381610ac2565b8114610bae57600080fd5b50565b600081359050610bc081610b9a565b92915050565b600060208284031215610bdc57610bdb610a32565b5b6000610bea84828501610bb1565b91505092915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420417574686f72697a656420746f2077697468647260008201527f61772046756e64732e0000000000000000000000000000000000000000000000602082015250565b6000610c60602983610bf3565b9150610c6b82610c04565b604082019050919050565b60006020820190508181036000830152610c8f81610c53565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cff82610ac2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d3157610d30610cc5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d86600083610d6b565b9150610d9182610d76565b600082019050919050565b6000610da782610d79565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610de7600b83610bf3565b9150610df282610db1565b602082019050919050565b60006020820190508181036000830152610e1681610dda565b9050919050565b7f4e6f7420456e6f75676820666f72205472616e73616374696f6e212100000000600082015250565b6000610e53601c83610bf3565b9150610e5e82610e1d565b602082019050919050565b60006020820190508181036000830152610e8281610e46565b9050919050565b6000610e9482610ac2565b9150610e9f83610ac2565b9250828202610ead81610ac2565b91508282048414831517610ec457610ec3610cc5565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f0582610ac2565b9150610f1083610ac2565b925082610f2057610f1f610ecb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f4a81610f2b565b8114610f5557600080fd5b50565b600081519050610f6781610f41565b92915050565b6000819050919050565b610f8081610f6d565b8114610f8b57600080fd5b50565b600081519050610f9d81610f77565b92915050565b600081519050610fb281610b9a565b92915050565b600080600080600060a08688031215610fd457610fd3610a32565b5b6000610fe288828901610f58565b9550506020610ff388828901610f8e565b945050604061100488828901610fa3565b935050606061101588828901610fa3565b925050608061102688828901610f58565b9150509295509295909350565b600061103e82610f6d565b915061104983610f6d565b925082820261105781610f6d565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561108f5761108e610cc5565b5b82820584148315176110a4576110a3610cc5565b5b509291505056fea26469706673582212201a6ff9bb5cb2fec605a6694366de52ef85605ad3352fad913135b9e4ed57eb6164736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_adressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}